name: Build and Deploy Keycloak

on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

env:
  REGISTRY_IMAGE: 071228701530.dkr.ecr.eu-central-1.amazonaws.com/kepeder/keycloak

permissions:
  id-token: write
  contents: read
jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64

    outputs:
      tags: ${{ steps.meta.outputs.tags }}

    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            # sha-based tag
            type=sha

            # branch event
            type=ref,enable=true,priority=600,prefix=,suffix=,event=branch
            # tag event
            type=ref,enable=true,priority=600,prefix=,suffix=,event=tag
            # pull request event
            type=ref,enable=true,priority=600,prefix=pr-,suffix=,event=pr

            type=raw,value=$(grep -oP '^FROM quay.io/phasetwo/phasetwo-keycloak:\K[0-9]+\.[0-9]+\.[0-9]+' Dockerfile)

            # minimal (short sha)
            type=raw,value=latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}
          aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: "071228701530"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Build and push by digest
        id: build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: ${{ matrix.platform }}
          labels: ${{ steps.meta.outputs.labels }}
          outputs: type=image,name=${{ env.REGISTRY_IMAGE }},push-by-digest=true,name-canonical=true,push=true
          cache-from: type=gha,scope=${{ env.PLATFORM_PAIR }}
          cache-to: type=gha,mode=max,scope=${{ env.PLATFORM_PAIR }}

      - name: Export digest
        run: |
          mkdir -p /tmp/digests
          digest="${{ steps.build.outputs.digest }}"
          touch "/tmp/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: digests-${{ env.PLATFORM_PAIR }}
          path: /tmp/digests/*
          if-no-files-found: error
          retention-days: 1

  merge:
    runs-on: ubuntu-latest

    needs:
      - build

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare
        run: |
          version=$(grep -oP '^FROM quay.io/phasetwo/phasetwo-keycloak:\K[0-9]+\.[0-9]+\.[0-9]+' Dockerfile)
          echo "KC_VERSION=${version}" >> $GITHUB_ENV

      - name: Download digests
        uses: actions/download-artifact@v4
        with:
          path: /tmp/digests
          pattern: digests-*
          merge-multiple: true

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ vars.AWS_DEFAULT_REGION }}
          aws-access-key-id: ${{ vars.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          registries: "071228701530"

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY_IMAGE }}
          tags: |
            # sha-based tag
            type=sha

            # branch event
            type=ref,enable=true,priority=600,prefix=,suffix=,event=branch
            # tag event
            type=ref,enable=true,priority=600,prefix=,suffix=,event=tag
            # pull request event
            type=ref,enable=true,priority=600,prefix=pr-,suffix=,event=pr

            type=raw,value=${{ env.KC_VERSION }}

            # minimal (short sha)
            type=raw,value=latest

      - name: Create manifest list and push
        working-directory: /tmp/digests
        run: |
          docker buildx imagetools create $(jq -cr '.tags | map("-t " + .) | join(" ")' <<< "$DOCKER_METADATA_OUTPUT_JSON") \
            $(printf '${{ env.REGISTRY_IMAGE }}@sha256:%s ' *)
